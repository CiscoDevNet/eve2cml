[project]
name = "eve2cml"
dynamic = ["version"]
description = "A CLI tool to convert EVE-NG XML topology data into CML2 topology data as YAML"
authors = [{ name = "Ralph Schmieder", email = "rschmied@cisco.com" }]
dependencies = ["beautifulsoup4>=4.12.3", "pyyaml>=6.0.1"]
requires-python = ">=3.8"
readme = "README.md"
license = { text = "MIT" }
keywords = [
  "automation",
  "tools",
  "simulation",
  "virtualization",
  "network-programming",
]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  "Environment :: Console",

  # Indicate who your project is intended for
  "Intended Audience :: Telecommunications Industry",
  # "Topic :: Software Development :: Build Tools",
  "Topic :: Internet",

  # Pick your license as you wish (see also "license" above)
  "License :: OSI Approved :: MIT License",

  # Operating system
  "Operating System :: OS Independent",

  # Specify the Python versions you support here.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[project.urls]
Homepage = "https://developer.cisco.com/modeling-labs"
Repository = "https://github.com/ciscodevnet/eve2cml"
Issues = "https://github.com/ciscodevnet/eve2cml/issues"
Changelog = "https://github.com/ciscodevnet/eve2cml/blob/master/CHANGELOG.md"
# Documentation = "https://readthedocs.org"

[project.scripts]
eve2cml = "eve2cml.main:main"

[tool.ruff]
lint.pydocstyle.convention = "google"
lint.select = [
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "E",  # pycodestyle - Error
  "F",  # Pyflakes
  "I",  # isort
  "W",  # pycodestyle - Warning
  "UP", # pyupgrade
]
lint.ignore = [
  "E501", # line-too-long
  "W191", # tab-indentation
]
include = ["**/*.py", "**/*.pyi", "**/pyproject.toml"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests", "integration"]

[tool.coverage.run]
source = ["src"]

[tool.uv]
cache-keys = [{ git = true }]
dev-dependencies = [
  "mypy>=1.11.2",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "ruff>=0.6.5",
  "types-beautifulsoup4>=4.12.0.20240907",
  "types-pyyaml>=6.0.12.20240917",
  "pytest-mock>=3.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/eve2cml/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/eve2cml"]
